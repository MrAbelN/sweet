# https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
# wgpu needs this
resolver = "2"
members = [
	# "crates/*"
	"crates/forky",
	"crates/forky_cli",
	"crates/forky_core",
	"crates/forky_esp",
	"crates/forky_play",
	"crates/forky_spline",
	"crates/forky_test",
	"crates/sweet",
]
exclude = ["crates/bevy_webxr"]

[workspace.package]
version = "0.1.9"
edition = "2021"
license-file = "LICENSE"
readme = "README.md"
authors = ["Peter Hayman <peteyhayman@gmail.com>"]
description = "Rust Utilities"
documentation = "https://github.com/mrchantey/forky"
repository = "https://github.com/mrchantey/forky"

[workspace.dependencies]
### internal ###
forky = {path = "./crates/forky", version = "0.1.9" }
forky_cli = {path = "./crates/forky_cli", version = "0.1.9" }
forky_core = {path = "./crates/forky_core", version = "0.1.9" }
forky_fs = {path = "./crates/forky_fs", version = "0.1.9" }
forky_esp = {path = "./crates/forky_esp", version = "0.1.9" }
forky_play = {path = "./crates/forky_play", version = "0.1.9" }
forky_spline = {path = "./crates/forky_spline", version = "0.1.9" }
forky_test = {path = "./crates/forky_test", version = "0.1.9" }
sweet = {path = "./crates/sweet", version = "0.*" }

### game ###

bevy = { version = "0.10.0" }
bevy-inspector-egui = "0.18.0"
bevy_mod_debugdump = "0.7.0"
bevy_rapier3d = {version = "0.21.0", features=["debug-render"]}
bevy_prototype_debug_lines = {version = "0.10.0", features = ["3d"]}
bevy_easings = "0.10.0"
### game ###
wgpu = { version = "0.15.0" }
rand = "0.8.5"
# wgpu-hal = {version = "0.15.2",features = ["gles"]}





### utility ###
notify = "5.1.0"
crossterm = "0.25.0"
colorize = "0.1.0"
gag = "1.0.0"
num-traits = "0.2.15"
anyhow = "1"
derive_deref = "1.1.1"
petgraph = "0.6.3"

### compile ###
inventory = "0.3.2"
backtrace = "0.3.66"
proc-macro2 = "1.0.47"
syn = {version="1.0.103",features= ["full"] }
quote = "1.0.21"
extend = "1.1.2"

### esp ###
rgb = "0.8.34"

### wasm ###
wasmi = "0.20.0"
futures = "0.3.26"
js-sys = "0.3.61"
wasm-bindgen = "0.2.84"
wasm-bindgen-futures = "0.4.34"
console_error_panic_hook = "0.1.7"

[workspace.dependencies.web-sys]
version = "0.3.61"
features = [
  'Document',
  'Element',
  'Gpu',
  'Headers',
  'HtmlCanvasElement',
  'Navigator',
  'Request',
  'RequestInit',
  'RequestMode',
  'Response',
  'WebGl2RenderingContext',
  'Window',
  'XrBoundedReferenceSpace',
  'XrEye',
  'XrFrame',
  'XrHandedness',
  'XrInputSource',
  'XrInputSourceArray',
  'XrInputSourceEvent',
  'XrInputSourceEventInit',
  'XrInputSourcesChangeEvent',
  'XrJointPose',
  'XrJointSpace',
  'XrPose',
  'XrReferenceSpace',
  'XrReferenceSpaceEvent',
  'XrReferenceSpaceEventInit',
  'XrReferenceSpaceType',
  'XrRenderState',
  'XrRenderStateInit',
  'XrRigidTransform',
  'XrSession',
  'XrSessionEvent',
  'XrSessionEventInit',
  'XrSessionInit',
  'XrSessionMode',
  'XrSpace',
  'XrTargetRayMode',
  'XrView',
  'XrViewerPose',
  'XrViewport',
  'XrVisibilityState',
  'XrWebGlLayer',
  'XrWebGlLayerInit',
  'XrSystem',
  'console'
]

# [patch.crates-io]
# # latest as of 28/02/23
# # [patch."https://github.com/bevyengine/bevy"]
# bevy = { path="../../work-ref/bevy"}
# bevy_animation ={path="../../work-ref/bevy/crates/bevy_animation"}
# bevy_app ={path="../../work-ref/bevy/crates/bevy_app"}
# bevy_asset ={path="../../work-ref/bevy/crates/bevy_asset"}
# bevy_audio ={path="../../work-ref/bevy/crates/bevy_audio"}
# bevy_core ={path="../../work-ref/bevy/crates/bevy_core"}
# bevy_core_pipeline ={path="../../work-ref/bevy/crates/bevy_core_pipeline"}
# bevy_derive ={path="../../work-ref/bevy/crates/bevy_derive"}
# bevy_diagnostic ={path="../../work-ref/bevy/crates/bevy_diagnostic"}
# # bevy_dylib ={path="../../work-ref/bevy/crates/bevy_dylib"}
# # bevy_dynamic_plugin ={path="../../work-ref/bevy/crates/bevy_dynamic_plugin"}
# bevy_ecs ={path="../../work-ref/bevy/crates/bevy_ecs"}
# # bevy_ecs_compile_fail_tests ={path="../../work-ref/bevy/crates/bevy_ecs_compile_fail_tests"}        
# bevy_encase_derive ={path="../../work-ref/bevy/crates/bevy_encase_derive"}
# bevy_gilrs ={path="../../work-ref/bevy/crates/bevy_gilrs"}
# bevy_gltf ={path="../../work-ref/bevy/crates/bevy_gltf"}
# bevy_hierarchy ={path="../../work-ref/bevy/crates/bevy_hierarchy"}
# bevy_input ={path="../../work-ref/bevy/crates/bevy_input"}
# bevy_internal ={path="../../work-ref/bevy/crates/bevy_internal"}
# bevy_log ={path="../../work-ref/bevy/crates/bevy_log"}
# bevy_macro_utils ={path="../../work-ref/bevy/crates/bevy_macro_utils"}
# bevy_math ={path="../../work-ref/bevy/crates/bevy_math"}
# bevy_mikktspace ={path="../../work-ref/bevy/crates/bevy_mikktspace"}
# bevy_pbr ={path="../../work-ref/bevy/crates/bevy_pbr"}
# bevy_ptr ={path="../../work-ref/bevy/crates/bevy_ptr"}
# bevy_reflect ={path="../../work-ref/bevy/crates/bevy_reflect"}
# # bevy_reflect_compile_fail_tests ={path="../../work-ref/bevy/crates/bevy_reflect_compile_fail_tests"}    
# bevy_render ={path="../../work-ref/bevy/crates/bevy_render"}
# bevy_scene ={path="../../work-ref/bevy/crates/bevy_scene"}
# bevy_sprite ={path="../../work-ref/bevy/crates/bevy_sprite"}
# bevy_tasks ={path="../../work-ref/bevy/crates/bevy_tasks"}
# bevy_text ={path="../../work-ref/bevy/crates/bevy_text"}
# bevy_time ={path="../../work-ref/bevy/crates/bevy_time"}
# bevy_transform ={path="../../work-ref/bevy/crates/bevy_transform"}
# bevy_ui ={path="../../work-ref/bevy/crates/bevy_ui"}
# bevy_utils ={path="../../work-ref/bevy/crates/bevy_utils"}
# bevy_window ={path="../../work-ref/bevy/crates/bevy_window"}
# bevy_winit ={path="../../work-ref/bevy/crates/bevy_winit"}